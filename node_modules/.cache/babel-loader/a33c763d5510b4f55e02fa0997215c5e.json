{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bakug\\\\desktop\\\\frontend_test\\\\client\\\\src\\\\components\\\\Student.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst oneStudent = _ref => {\n  _s();\n\n  let {\n    id,\n    pic,\n    firstName,\n    lastName,\n    email,\n    company,\n    skill,\n    grades,\n    student\n  } = _ref;\n  const [testScores, setTestScores] = useState(false);\n\n  const average = arr => {\n    let sum = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n      sum += parseInt(arr[i]);\n    }\n\n    let total = sum / arr.length;\n    return total;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: student.pic,\n      className: \"pfp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infoWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [student.firstName, \" \", student.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [\" Email: \", student.email, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [\" Company: \", student.company, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [\" Skill: \", student.skill, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [\" Average: \", average(student.grades), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: testScores && student.grades.map((grades, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"testscores\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", \"Test \", idx + 1, \" : \", grades, \"%\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this)\n          }, grades + \" \" + idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      type: \"button\",\n      onClick: () => {\n        setTestScores(!testScores);\n      },\n      children: testScores ? \"-\" : \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, idx, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n\n_s(oneStudent, \"njuO8p8HRgML8zUQ/GoU5JSGYS4=\");\n\nexport default oneStudent;","map":{"version":3,"sources":["C:/Users/bakug/desktop/frontend_test/client/src/components/Student.jsx"],"names":["React","useEffect","useState","oneStudent","id","pic","firstName","lastName","email","company","skill","grades","student","testScores","setTestScores","average","arr","sum","i","length","parseInt","total","map","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,UAAU,GAAG,QAAmE;AAAA;;AAAA,MAAlE;AAACC,IAAAA,EAAD;AAAIC,IAAAA,GAAJ;AAAQC,IAAAA,SAAR;AAAkBC,IAAAA,QAAlB;AAA2BC,IAAAA,KAA3B;AAAiCC,IAAAA,OAAjC;AAAyCC,IAAAA,KAAzC;AAA+CC,IAAAA,MAA/C;AAAsDC,IAAAA;AAAtD,GAAkE;AAElF,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMa,OAAO,GAAIC,GAAD,IAAS;AACrB,QAAIC,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjCD,MAAAA,GAAG,IAAIG,QAAQ,CAACJ,GAAG,CAACE,CAAD,CAAJ,CAAf;AACH;;AACD,QAAIG,KAAK,GAAGJ,GAAG,GAAGD,GAAG,CAACG,MAAtB;AAEA,WAAOE,KAAP;AACH,GARD;;AAUA,sBAAO;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACP;AAAK,MAAA,GAAG,EAAET,OAAO,CAACP,GAAlB;AAAuB,MAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YADO,eAGP;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACA;AAAA,mBAAKO,OAAO,CAACN,SAAb,OAAyBM,OAAO,CAACL,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BAA+BK,OAAO,CAACJ,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,iCAAiCI,OAAO,CAACH,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BAA+BG,OAAO,CAACF,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,iCAAiCK,OAAO,CAACH,OAAO,CAACD,MAAT,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cANA,eAQA;AAAA,kBACKE,UAAU,IAAID,OAAO,CAACD,MAAR,CAAeW,GAAf,CAAmB,CAACX,MAAD,EAASY,GAAT,KAAiB;AAC/C,8BACI;AAAK,YAAA,SAAS,EAAE,YAAhB;AAAA,mCACI;AAAA,yBACK,GADL,WAEUA,GAAG,GAAG,CAFhB,SAEsBZ,MAFtB,OAE+B,GAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAkCA,MAAM,GAAG,GAAT,GAAeY,GAAjD;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOG,SARQ;AADnB;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHO,eAwBP;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,IAAI,EAAC,QAAhC;AAAyC,MAAA,OAAO,EAAE,MAAM;AAACT,QAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AAA4B,OAArF;AAAA,gBACSA,UAAU,GAAG,GAAH,GAAS;AAD5B;AAAA;AAAA;AAAA;AAAA,YAxBO;AAAA,KAA8BU,GAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AA4BH,CA1CD;;GAAMpB,U;;AA4CN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst oneStudent = ({id,pic,firstName,lastName,email,company,skill,grades,student}) =>{\r\n\r\n    const [testScores, setTestScores] = useState(false);\r\n\r\n    const average = (arr) => {\r\n        let sum = 0;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            sum += parseInt(arr[i]);\r\n        }\r\n        let total = sum / arr.length;\r\n        \r\n        return total;\r\n    }\r\n\r\n    return(<div className='wrapper' key={idx}>\r\n    <img src={student.pic} className='pfp'></img>\r\n    \r\n    <div className='infoWrapper'>\r\n    <h1>{student.firstName} {student.lastName}</h1>\r\n\r\n    <div className=\"info\"> Email: {student.email} </div>\r\n    <div className=\"info\"> Company: {student.company} </div>\r\n    <div className=\"info\"> Skill: {student.skill} </div>\r\n    <div className=\"info\"> Average: {average(student.grades)}%</div>\r\n\r\n    <div>\r\n        {testScores && student.grades.map((grades, idx) => {\r\n            return (\r\n                <div className= 'testscores' key={grades + \" \" + idx}>\r\n                    <div>\r\n                        {\" \"}\r\n                        Test {idx + 1} : {grades}%{\" \"}\r\n                    </div>\r\n                </div>\r\n            );})}\r\n        </div>\r\n    </div>\r\n\r\n    <button className=\"button\" type='button' onClick={() => {setTestScores(!testScores);}}>\r\n            {testScores ? \"-\" : \"+\"}\r\n    </button>\r\n  </div>)\r\n}\r\n\r\nexport default oneStudent;"]},"metadata":{},"sourceType":"module"}
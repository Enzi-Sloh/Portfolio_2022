{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bakug\\\\desktop\\\\frontend_test\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Students = () => {\n  _s();\n\n  const [student, setStudent] = useState([]);\n  const [grades, setGrades] = useState(false); //calling api\n\n  useEffect(() => {\n    axios.get('https://api.hatchways.io/assessment/students').then(res => setStudent(res.data.students));\n  }, []);\n\n  const average = arr => {\n    let sum = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n      sum += parseInt(arr[i]);\n    }\n\n    let total = sum / arr.length;\n    return total;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: student.map((student, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: student.pic,\n          className: \"pfp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [student.firstName, \" \", student.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [\" Email: \", student.email, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [\" Company: \", student.company, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [\" Skill: \", student.skill, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [\" Average: \", average(student.grades), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            setShowGrades(!showGrades);\n          },\n          children: showGrades ? \"-\" : \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: grades && student.grades.map((grades, idx) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"testscores\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\" \", \"Test \", idx + 1, \" : \", grades, \"%\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)\n            }, grades + \" \" + idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 46\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Students, \"InAiMXdGUeqoiwG9bVYCZzEAdSE=\");\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["C:/Users/bakug/desktop/frontend_test/client/src/App.js"],"names":["React","useEffect","useState","axios","Students","student","setStudent","grades","setGrades","get","then","res","data","students","average","arr","sum","i","length","parseInt","total","map","idx","pic","firstName","lastName","email","company","skill","setShowGrades","showGrades"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios';\n\nconst Students = () => {\n  const [student, setStudent] = useState([]);\n  const [grades, setGrades] = useState(false);\n\n  //calling api\n  useEffect(() => {\n      axios.get('https://api.hatchways.io/assessment/students')\n          .then(res => setStudent(res.data.students));\n  }, [])\n\n  const average = (arr) => {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n      sum += parseInt(arr[i]);\n    }\n    let total = sum / arr.length;\n    \n    return total;\n  }\n  return (\n    <div>\n      {student.map((student, idx) => {return <div key={idx}>\n        <img src={student.pic} className='pfp'></img>\n        <h1>{student.firstName} {student.lastName}</h1>\n        <div className=\"info\"> Email: {student.email} </div>\n        <div className=\"info\"> Company: {student.company} </div>\n        <div className=\"info\"> Skill: {student.skill} </div>\n        <div className=\"info\"> Average: {average(student.grades)}%</div>\n        <button\n          className=\"button\"\n          onClick={() => {\n            setShowGrades(!showGrades);\n          }}\n        >\n          {showGrades ? \"-\" : \"+\"}\n        </button>\n        <div>\n          {grades &&\n            student.grades.map((grades, idx) => {\n              return (\n                <div className= 'testscores' key={grades + \" \" + idx}>\n                  <div>\n                    {\" \"}\n                    Test {idx + 1} : {grades}%{\" \"}\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      </div>})}\n    </div>\n  );\n}\n\nexport default Students;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bakug\\\\desktop\\\\frontend_test\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport OneStudent from './components/Student';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StudentApp = () => {\n  _s();\n\n  const [student, setStudent] = useState([]);\n  const [studentNameFilter, setStudentNameFilter] = useState(\"\");\n  const [tagFilter, setTagFilter] = useState(\"\"); //calling api\n\n  useEffect(() => {\n    axios.get('https://api.hatchways.io/assessment/students').then(res => setStudent(res.data.students));\n  }, []);\n\n  const nameFilter = filterString => {\n    if (filterString && filterString.toLowerCase) {\n      filterString = filterString.toLowerCase();\n    }\n\n    let filtered = [];\n    student.forEach(student => {\n      const fullName = `${student.firstName} ${student.lastName}`.toLowerCase();\n\n      if (!filterString || fullName.includes(filterString)) {\n        filtered.push(student);\n      }\n    });\n    return filtered;\n  };\n\n  const createTagForStudent = (student, newTag) => {\n    student.tags.push(newTag);\n    const indexOfStudent = student.findIndex(s => s.id === student.id);\n    let studentWithChanges = [...student.slice(0, indexOfStudent), student, ...student.slice(indexOfStudent + 1)];\n    setStudent(studentWithChanges);\n  }; // const searchTags = (tagInput) => {\n  //   if (tagInput && tagInput.toLowerCase) {\n  //     tagInput = tagInput.toLowerCase();\n  //   }\n  //   let searchTagsArray = [];\n  //   student.forEach((student) => {\n  //     let tagExists = false;\n  //     student.tags.forEach((t) => {\n  //       if (t.toLowerCase().includes(tagInput)) {\n  //         tagExists = true;\n  //       }\n  //     });\n  //     if (!tagInput || tagExists) {\n  //       searchTagsArray.push(student);\n  //     }\n  //   });\n  //   return searchTagsArray;\n  // };\n\n\n  const filteredByNameStudents = nameFilter(studentNameFilter);\n  const filteredByTagStudents = searchTags(tagFilter);\n  const combinedFilteredStudents = []; //-------------- Combine Search Arrays\n\n  filteredByNameStudents.forEach(student => {\n    if (filteredByTagStudents.includes(student)) {\n      combinedFilteredStudents.push(student);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setStudentNameFilter(event.target.value),\n        type: \"text\",\n        placeholder: \"Search by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setTagFilter(event.target.value),\n        type: \"text\",\n        placeholder: \"Search by tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), student.map(student => {\n      return /*#__PURE__*/_jsxDEV(OneStudent, {\n        pic: student.pic,\n        firstName: student.firstName.toUpperCase(),\n        lastName: student.lastName.toUpperCase(),\n        email: student.email,\n        company: student.company,\n        skill: student.skill,\n        grades: student.grades,\n        student: student,\n        createTagForStudent: createTagForStudent,\n        students: combinedFilteredStudents\n      }, \"student\" + student.id.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StudentApp, \"SKY64Uy4BhY77prhG4FONVlWF3g=\");\n\n_c = StudentApp;\nexport default StudentApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentApp\");","map":{"version":3,"sources":["C:/Users/bakug/desktop/frontend_test/client/src/App.js"],"names":["React","useEffect","useState","axios","OneStudent","StudentApp","student","setStudent","studentNameFilter","setStudentNameFilter","tagFilter","setTagFilter","get","then","res","data","students","nameFilter","filterString","toLowerCase","filtered","forEach","fullName","firstName","lastName","includes","push","createTagForStudent","newTag","tags","indexOfStudent","findIndex","s","id","studentWithChanges","slice","filteredByNameStudents","filteredByTagStudents","searchTags","combinedFilteredStudents","event","target","value","map","pic","toUpperCase","email","company","skill","grades","toString"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C,CAHuB,CAKvB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACS,GAAN,CAAU,8CAAV,EACKC,IADL,CACUC,GAAG,IAAIP,UAAU,CAACO,GAAG,CAACC,IAAJ,CAASC,QAAV,CAD3B;AAEH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,UAAU,GAAIC,YAAD,IAAkB;AACnC,QAAIA,YAAY,IAAIA,YAAY,CAACC,WAAjC,EAA8C;AAC5CD,MAAAA,YAAY,GAAGA,YAAY,CAACC,WAAb,EAAf;AACD;;AACD,QAAIC,QAAQ,GAAG,EAAf;AACAd,IAAAA,OAAO,CAACe,OAAR,CAAiBf,OAAD,IAAa;AAC3B,YAAMgB,QAAQ,GAAI,GAAEhB,OAAO,CAACiB,SAAU,IAAGjB,OAAO,CAACkB,QAAS,EAAzC,CAA2CL,WAA3C,EAAjB;;AAEA,UAAI,CAACD,YAAD,IAAiBI,QAAQ,CAACG,QAAT,CAAkBP,YAAlB,CAArB,EAAsD;AACpDE,QAAAA,QAAQ,CAACM,IAAT,CAAcpB,OAAd;AACD;AACF,KAND;AAOA,WAAOc,QAAP;AACD,GAbD;;AAeA,QAAMO,mBAAmB,GAAG,CAACrB,OAAD,EAAUsB,MAAV,KAAqB;AAC/CtB,IAAAA,OAAO,CAACuB,IAAR,CAAaH,IAAb,CAAkBE,MAAlB;AAEA,UAAME,cAAc,GAAGxB,OAAO,CAACyB,SAAR,CAAmBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAAS3B,OAAO,CAAC2B,EAA1C,CAAvB;AACA,QAAIC,kBAAkB,GAAG,CACvB,GAAG5B,OAAO,CAAC6B,KAAR,CAAc,CAAd,EAAiBL,cAAjB,CADoB,EAEvBxB,OAFuB,EAGvB,GAAGA,OAAO,CAAC6B,KAAR,CAAcL,cAAc,GAAG,CAA/B,CAHoB,CAAzB;AAKAvB,IAAAA,UAAU,CAAC2B,kBAAD,CAAV;AACD,GAVD,CA1BuB,CAuCvB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAME,sBAAsB,GAAGnB,UAAU,CAACT,iBAAD,CAAzC;AACA,QAAM6B,qBAAqB,GAAGC,UAAU,CAAC5B,SAAD,CAAxC;AACA,QAAM6B,wBAAwB,GAAG,EAAjC,CA9DuB,CAgEvB;;AAEAH,EAAAA,sBAAsB,CAACf,OAAvB,CAAgCf,OAAD,IAAa;AAC1C,QAAI+B,qBAAqB,CAACZ,QAAtB,CAA+BnB,OAA/B,CAAJ,EAA6C;AAC3CiC,MAAAA,wBAAwB,CAACb,IAAzB,CAA8BpB,OAA9B;AACD;AACF,GAJD;AAMA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAG,QAAjB;AAAA,6BACM;AACI,QAAA,QAAQ,EAAIkC,KAAD,IAAW/B,oBAAoB,CAAC+B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAD9C;AAEI,QAAA,IAAI,EAAE,MAFV;AAGI,QAAA,WAAW,EAAE;AAHjB;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YADF,eAQI;AAAK,MAAA,SAAS,EAAG,QAAjB;AAAA,6BACI;AACI,QAAA,QAAQ,EAAIF,KAAD,IAAW7B,YAAY,CAAC6B,KAAK,CAACC,MAAN,CAAaC,KAAd,CADtC;AAEI,QAAA,IAAI,EAAE,MAFV;AAGI,QAAA,WAAW,EAAE;AAHjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ,EAeGpC,OAAO,CAACqC,GAAR,CAAarC,OAAD,IAAa;AAAC,0BACvB,QAAC,UAAD;AAEE,QAAA,GAAG,EAAEA,OAAO,CAACsC,GAFf;AAGE,QAAA,SAAS,EAAEtC,OAAO,CAACiB,SAAR,CAAkBsB,WAAlB,EAHb;AAIE,QAAA,QAAQ,EAAEvC,OAAO,CAACkB,QAAR,CAAiBqB,WAAjB,EAJZ;AAKE,QAAA,KAAK,EAAEvC,OAAO,CAACwC,KALjB;AAME,QAAA,OAAO,EAAExC,OAAO,CAACyC,OANnB;AAOE,QAAA,KAAK,EAAEzC,OAAO,CAAC0C,KAPjB;AAQE,QAAA,MAAM,EAAE1C,OAAO,CAAC2C,MARlB;AASE,QAAA,OAAO,EAAE3C,OATX;AAUE,QAAA,mBAAmB,EAAEqB,mBAVvB;AAWE,QAAA,QAAQ,EAAEY;AAXZ,SACO,YAAYjC,OAAO,CAAC2B,EAAR,CAAWiB,QAAX,EADnB;AAAA;AAAA;AAAA;AAAA,cADuB;AAYmB,KAZ7C,CAfH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAzGD;;GAAM7C,U;;KAAAA,U;AA2GN,eAAeA,UAAf","sourcesContent":["\nimport './App.css';\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport OneStudent from './components/Student';\n\nconst StudentApp = () => {\n  const [student, setStudent] = useState([]);\n  const [studentNameFilter, setStudentNameFilter] = useState(\"\");\n  const [tagFilter, setTagFilter] = useState(\"\");\n\n  //calling api\n  useEffect(() => {\n      axios.get('https://api.hatchways.io/assessment/students')\n          .then(res => setStudent(res.data.students));\n  }, [])\n\n  const nameFilter = (filterString) => {\n    if (filterString && filterString.toLowerCase) {\n      filterString = filterString.toLowerCase();\n    }\n    let filtered = [];\n    student.forEach((student) => {\n      const fullName = `${student.firstName} ${student.lastName}`.toLowerCase();\n\n      if (!filterString || fullName.includes(filterString)) {\n        filtered.push(student);\n      }\n    });\n    return filtered;\n  };\n\n  const createTagForStudent = (student, newTag) => {\n    student.tags.push(newTag);\n\n    const indexOfStudent = student.findIndex((s) => s.id === student.id);\n    let studentWithChanges = [\n      ...student.slice(0, indexOfStudent),\n      student,\n      ...student.slice(indexOfStudent + 1),\n    ];\n    setStudent(studentWithChanges);\n  };\n\n\n  // const searchTags = (tagInput) => {\n  //   if (tagInput && tagInput.toLowerCase) {\n  //     tagInput = tagInput.toLowerCase();\n  //   }\n\n  //   let searchTagsArray = [];\n  //   student.forEach((student) => {\n  //     let tagExists = false;\n  //     student.tags.forEach((t) => {\n  //       if (t.toLowerCase().includes(tagInput)) {\n  //         tagExists = true;\n  //       }\n  //     });\n\n  //     if (!tagInput || tagExists) {\n  //       searchTagsArray.push(student);\n  //     }\n  //   });\n  //   return searchTagsArray;\n  // };\n\n  const filteredByNameStudents = nameFilter(studentNameFilter);\n  const filteredByTagStudents = searchTags(tagFilter);\n  const combinedFilteredStudents = [];\n\n  //-------------- Combine Search Arrays\n\n  filteredByNameStudents.forEach((student) => {\n    if (filteredByTagStudents.includes(student)) {\n      combinedFilteredStudents.push(student);\n    }\n  });\n\n  return (\n    <div >\n      <div className = 'search'> \n            <input \n                onChange= {(event) => setStudentNameFilter(event.target.value)}\n                type= 'text'\n                placeholder= \"Search by name\"\n            />\n        </div>\n        <div className = 'search'> \n            <input \n                onChange= {(event) => setTagFilter(event.target.value)}\n                type= 'text'\n                placeholder= \"Search by tag\"\n            />\n        </div>\n      {student.map((student) => {return(\n          <OneStudent\n            key={\"student\" + student.id.toString()}\n            pic={student.pic}\n            firstName={student.firstName.toUpperCase()}\n            lastName={student.lastName.toUpperCase()}\n            email={student.email}\n            company={student.company}\n            skill={student.skill}\n            grades={student.grades}\n            student={student}\n            createTagForStudent={createTagForStudent}\n            students={combinedFilteredStudents}/>) })\n            \n            }\n    </div>\n  );\n}\n\nexport default StudentApp;\n"]},"metadata":{},"sourceType":"module"}